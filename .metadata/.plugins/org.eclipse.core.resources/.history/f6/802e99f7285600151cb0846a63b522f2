package main.application;

import java.util.ArrayList;
import java.util.Scanner;

/**
 * Vraag 6 - Pascal Triangle
 * Pascals driehoek is een bekende piramide waarbij het bovenste getal 1 is en de opvolgende rijen de som zijn 
 * van de 2 bovenliggende aangrenzende getallen. Zie hieronder een voorbeeld :
 * 
 *		1
 *	   1 1
 *	  1 2 1
 *	 1 3 3 1
 *  1 4 6 4 1
 * 1 5 10 10 5 1
 * 
 * Bereken de som van de onderste rij van een Pascal-driehoek met duizend rijen. De top van de driehoek telt niet mee als rij.
 * Gebruik in je antwoord de wetenschappelijke notatie, rond af op 4 cijfers achter de komma, bijvoorbeeld: 1.0903E+23
 */
public class VraagSei {

	private static double sum;
	
	 

	   public static void main(String[] args) {
	      // Scanner scanner = new Scanner(System.in);
	      // System.out.print("Enter the row number upto which Pascal's triangle has to be printed: ");
	      // int row = scanner.nextInt();
		   ArrayList <ArrayList<Integer>> test = generate(1000);
		   for(int i = 0; i < test.size(); i ++){
			   if((i+1) == test.size()){
				   for(int x: test.get(i)){
					   sum += x;
				   }
				   System.out.printf("dexp: %f\n", (sum));
			   }
		   }
	   }
	   
	   public static ArrayList<ArrayList<Double>> generate(int numRows) {
			ArrayList<ArrayList<Double>> result = new ArrayList<ArrayList<Double>>();
			if (numRows <= 0)
				return result;
		 
			ArrayList<Double> pre = new ArrayList<Double>();
			pre.add(1);
			result.add(pre);
		 
			for (int i = 2; i <= numRows; i++) {
				ArrayList<Double> cur = new ArrayList<Double>();
		 
				cur.add(1); //first
				for (int j = 0; j < pre.size() - 1; j++) {
					cur.add(pre.get(j) + pre.get(j + 1)); //middle
				}
				cur.add(1);//last
		 
				result.add(cur);
				pre = cur;
			}
		 
			return result;
		}
}
