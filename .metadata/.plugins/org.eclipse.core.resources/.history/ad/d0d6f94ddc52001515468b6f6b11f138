package main.application;


/**
 * De Fibonaccireeks is een rij van getallen die ten grondslag ligt aan vele processen in de natuur, 
 * van de structuur van zonnebloemen tot de explosieve groei van een konijnenpopulatie.
 * De reeks begint met de getallen 0 en 1, waarna ieder volgend getal de som is van zijn 2 voorgangers.
 * Het begin is dus: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, etc.
 * Stel dat je van alle Fibonaccigetallen tot 1.000.000.000.000.000.000 (1018) de afzonderlijke cijfers optelt,
 * hoe vaak komt daar een getal uit dat zelf het kwadraat is van een geheel getal?
 * Voorbeeldnotatie antwoord (schrijfwijze als positief integer): 15000
 */
public class VraagDue {
	public static void main(String[] args) {
		VraagDueThread vDT1 = new VraagDueThread("0", "100000000000000000", "T1");
		VraagDueThread vDT2 = new VraagDueThread("100000000000000000", "200000000000000000", "T2");
		VraagDueThread vDT3 = new VraagDueThread("200000000000000000", "300000000000000000", "T3");
		VraagDueThread vDT4 = new VraagDueThread("300000000000000000", "400000000000000000", "T4");
		VraagDueThread vDT5 = new VraagDueThread("400000000000000000", "500000000000000000", "T5");
		VraagDueThread vDT6 = new VraagDueThread("500000000000000000", "600000000000000000", "T6");
		VraagDueThread vDT7 = new VraagDueThread("600000000000000000", "700000000000000000", "T7");
		VraagDueThread vDT8 = new VraagDueThread("700000000000000000", "8000000000000000000", "T8");
		VraagDueThread vDT9 = new VraagDueThread("800000000000000000", "900000000000000000", "T9");
		VraagDueThread vDT10 = new VraagDueThread("900000000000000000", "1000000000000000000", "T10");
		
		Thread t1 = new Thread(vDT1);
		t1.start();
		System.out.println("Thread t1 is allive: " + t1.isAlive());
		Thread t2 = new Thread(vDT2);
		t2.start();
		System.out.println("Thread t is allive: " + t2.isAlive());
		Thread t3 = new Thread(vDT3);
		t3.start();
		System.out.println("Thread t3 is allive: " + t3.isAlive());
		Thread t4 = new Thread(vDT4);
		t4.start();
		System.out.println("Thread t4 is allive: " + t4.isAlive());
		Thread t5 = new Thread(vDT5);
		t5.start();
		System.out.println("Thread t5 is allive: " + t5.isAlive());
		Thread t6 = new Thread(vDT6);
		t6.start();
		System.out.println("Thread t6 is allive: " + t6.isAlive());
		Thread t7 = new Thread(vDT7);
		t7.start();
		System.out.println("Thread t7 is allive: " + t7.isAlive());
		Thread t8 = new Thread(vDT8);
		t8.start();
		System.out.println("Thread t8 is allive: " + t8.isAlive());
		Thread t9 = new Thread(vDT9);
		t9.start();
		System.out.println("Thread t9 is allive: " + t9.isAlive());
		Thread t10 = new Thread(vDT10);
		t10.start();
		System.out.println("Thread t10 is allive: " + t10.isAlive());
		
		//Antwoord is: 6
	}
}
